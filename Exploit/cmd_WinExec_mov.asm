.386 ; Directiva que indica usar el set de instrucciones Intel 80386

.model flat,stdcall ; Modelo de memoria plano (Win32)
option casemap:none ; Etiquetas sensibles a mayúsculas y minúsculas

.code ; Inicializa el segmento de código
start:
	push ebp
	mov ebp, esp
	xor edi, edi ; EDI = 0x00
	xor ecx, ecx ; ECX = 0x00

	push edi     ; Fin de cadena
	sub esp, 0Ch ; Reserva espacio en la pila para ingresar la cadena
	mov byte ptr [ebp-0Ch], 6Dh ; "m"
	mov byte ptr [ebp-0Bh], 73h ; "s"
	mov byte ptr [ebp-0Ah], 70h ; "p"
	mov byte ptr [ebp-09h], 61h ; "a"
	mov byte ptr [ebp-08h], 69h ; "i"
	mov byte ptr [ebp-07h], 6Eh ; "n"
	mov byte ptr [ebp-06h], 74h ; "t"
	mov byte ptr [ebp-05h], 2Eh ; "."
	mov byte ptr [ebp-04h], 65h ; "e"
	mov byte ptr [ebp-03h], 78h ; "x"
	mov byte ptr [ebp-02h], 65h ; "e"
	lea eax, [ebp-0Ch]          ; Dirección de "m"

	;mov ecx, 05h               ; \xB9\x05\x00\x00\x00
	mov cl, 05h                 ; ShowWindow [0-11]
	push ecx                    ; SW_SHOW
	push eax                    ; "cmd.exe\0"
	mov ebx, 75D7E5FDh          ; WinExec() en kernel32.dll
	call ebx                    ; Ejecuta WinExec() con argumento cmd.exe

	push edi                    ; 0
	mov ebx, 75D4214Fh          ; ExitProcess() en kernel32.dll
	call ebx                    ; Ejecuta ExitProcess() con argumento 0
end start
