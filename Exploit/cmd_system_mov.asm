.386 ; Directiva que indica usar el set de instrucciones Intel 80386

.model flat,stdcall ; Modelo de memoria plano (Win32)
option casemap:none ; Etiquetas sensibles a mayúsculas y minúsculas

include C:\masm32\include\kernel32.inc	; Uso de LoadLibraryA()
includelib C:\masm32\lib\kernel32.lib	; Uso de LoadLibraryA()

.data ; Inicializa el segmento de datos
	Library db "msvcrt.dll", 0  ; Llamada a la API system() y exit()

.code ; Inicializa el segmento de código
start:
	invoke LoadLibrary, offset Library
	push ebp
	mov ebp, esp
	xor edi, edi ; EDI = 0x00

	push edi     ; Fin de cadena

	sub esp, 0Ch ; Reserva espacio en la pila para ingresar la cadena
	mov byte ptr [ebp-0Ch], 6Dh ; "m"
	mov byte ptr [ebp-0Bh], 73h ; "s"
	mov byte ptr [ebp-0Ah], 70h ; "p"
	mov byte ptr [ebp-09h], 61h ; "a"
	mov byte ptr [ebp-08h], 69h ; "i"
	mov byte ptr [ebp-07h], 6Eh ; "n"
	mov byte ptr [ebp-06h], 74h ; "t"
	mov byte ptr [ebp-05h], 2Eh ; "."
	mov byte ptr [ebp-04h], 65h ; "e"
	mov byte ptr [ebp-03h], 78h ; "x"
	mov byte ptr [ebp-02h], 65h ; "e"
	lea eax, [ebp-0Ch]          ; Dirección de "m"

	push eax                    ; "mspaint.exe\0"
	mov ebx, 75E3B16Fh          ; system() en msvcrt.dll
	call ebx                    ; Ejecuta system() con argumento cmd.exe

	push edi                    ; 0
	mov ebx, 75DF36AAh          ; exit() en msvcrt.dll
	call ebx                    ; Ejecuta exit() con argumento 0
end start
